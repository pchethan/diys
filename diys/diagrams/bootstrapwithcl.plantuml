@startuml
skinparam style strictuml
skinparam defaultFontName Arial

|Dev/Build|
start
:".java" files;
-> compile;
:".class" files;
-> package;
if ("jar/war/ear"?) equals (jar) then
->jar deploy;
|Runtime Environment|
:RE Location;
stop
else
->war deploy;
|Container Environment|
:webapp folder;
stop
endif


|Runtime Environment|
start
-> service or 
human runs;
split
:java -jar ...jar;
split again
:java -classpath ...jar:..jar mainClass;
end split
->JVM extracts to;
:extracted folder;
->JVM loads;
:boot classloader
with cp=JRE jars;
->JVM loads child CL;
:ext classloader 
with cp=JRE ext jars;
->JVM loads child CL;
:App classloader
with cp=App jar;
->JVM calls AppCL.loadClass of;
:main class;
->JVM calls;
:MainClass.main;
note right
apps can further load classloaders
example: Spring Boot;
end note
-[hidden]->

partition Container {
:MainClass.main;
-> JVM loads 
child CL;
:URL classloader;
}
stop

|Container Environment|
start
->Container extracts to;
#LightSkyBlue:appname folder;
->Container loads child CL;
#LightSkyBlue:WebApp classloader
with cp=WEB-INF/classes/ dir
and WEB-INF/lib/*.jar jars;

->Container creates;
#LightSkyBlue:JavaEE Servlet context with WCL;
->Container notifies;
:App's Context listeners;
->Container loads;
:App's Servlets with WCL;
:Container inits App's Servlets;
:Listeners may load further containers
like Spring;
: load new business class from 
WCL or container on top;
stop

|Runtime Environment|
floating note right
listeners may create a spring context
end note


@enduml